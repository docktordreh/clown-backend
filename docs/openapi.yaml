openapi: 3.0.3
info:
  title: Clown backend
  description: |-
    This is the backend service for [CLOWN](https://github.com/docktordreh/clown), providing access to the database
  contact:
    email: valentin_lechner@tutanota.de
  license:
    name: MIT
    url: https://mit-license.org/
  version: 1.0.0
externalDocs:
  description: Find out more about CLOWN
  url: https://github.com/docktordreh/clown

tags:
  - name: rating
    description: Your coffee ratings
paths:
  /api/rating:
    post:
      tags:
        - rating
      summary: Create a new rating
      description: Create a new rating
      operationId: createRating
      requestBody:
        description: Create rating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      responses:
        '201':
          description: Rating created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400': 
          description: Invalid request
    get:
      tags:
        - rating
      summary: Load all ratings
      description: Load all ratings
      operationId: loadAllRatings
      responses:
        '200':
          description: Ratings loaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingArray"
                
  /api/rating/:id:
    put:
      tags:
        - rating
      summary: Update an existing rating
      description: Update an existing rating by Id
      operationId: updateRating
      requestBody:
        description: Update an existent rating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      responses:
        '200':
          description: Updated a rating
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid ID supplied
        '404':
          description: Rating not found
        '405':
          description: Validation exception
    delete:
      tags:
        - rating
      summary: Delete a rating
      description: Delete a rating
      operationId: deleteRating
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Rating not found
    get:
      tags:
        - rating
      summary: Load a rating by ID
      description: Load rating by ID
      operationId: loadRating
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"
        '400':
          description: Invalid ID supplied
        '404':
          description: Rating not found


 
components:
  schemas:
   
    RatingArray:
      type: array
      items:
        $ref: "/components/schemas/Rating"
    Rating:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ids will be generated by backend
        time:
          type: string
          format: date-time
          description: -|
            timestamp of creation. will be automatically set by
            backend service
        coffee:
          type: string
          example: GePa Faires Pfund
          description: identifier for the beans used
        grinder:
          type: string
          example: DF-64
          description: name of the grinder used
        grindsetting:
          type: number
          format: float
          description: The setting used for grinding the beans
          example: 1.25
        amtbeans:
          type: number
          format: float
          example: 17.5
          description: the amount of beans used [g]
        brewingtime:
          type: number
          format: float
          example: 25.5
          description: the time needed for brewing [s]
        weightres:
          type: number
          format: float
          description: the weight of the resulting espresso [g]
          example: 29.5
        taste:
          type: string
          description: -|
            rather than ranking on a scale from 1-10, it is far more
            interesting how users would describe their espresso experience

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - jwt: []
